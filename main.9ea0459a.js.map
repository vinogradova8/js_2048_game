{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageWin","messageLose","fieldRows","querySelectorAll","rowsArr","gameScore","innerText","gameField","gameOver","cells","cellsArr","columnsArr","i","column","j","length","push","randomNumber","start","end","number","Math","ceil","random","chooseNumber","chooseCell","fieldCellNumber","fieldCell","colorCells","cellList","forEach","cell","classList","contains","remove","add","addNewNumber","cellContent","fieldCell1","setTimeout","emptyCellCheckRightAndDown","arr","emptyCellCheckLeftAndUp","emptyCellInRowOrColumnCheck","keyCode","arrOfvalues","ch","includes","emptyCellCheck","count","children","innerTextArr","map","clearCells","addEventListener","e","code","numbersArrBefore","numbersArrAfter","JSON","stringify"],"mappings":";AACA,aAoWA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlWA,IAAMA,EAASC,SAASC,cAAc,UAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAaH,SAASC,cAAc,gBACpCG,EAAcJ,SAASC,cAAc,iBAErCI,EAAYL,SAASM,iBAAiB,cAEtCC,EAAcF,EAAAA,GAEdG,EAAYR,SAASC,cAAc,eAEzCO,EAAUC,UAAY,EAWtB,IATA,IAAMC,EAAYV,SAASC,cAAc,eAErCU,EAAW,EAETC,EAAQZ,SAASM,iBAAiB,eAClCO,EAAeD,EAAAA,GAEfE,EAAa,GAEVC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAGtB,IAFCC,IAAAA,EAAS,GAENC,EAAIF,EAAGE,GAAKJ,EAASK,OAAS,EAAGD,GAAK,EAC7CD,EAAOG,KAAKN,EAASI,IAGvBH,EAAWK,KAAKH,GAGlB,SAASI,EAAaC,EAAOC,GAGpBC,OAFQF,EAAQG,KAAKC,KAAKD,KAAKE,SAAWJ,EAAMD,GAKzD,SAASM,IAGHJ,OAAW,IAFAH,EAAa,EAAG,IAGtB,EAGF,EAGT,SAASQ,IAKA,IAJHC,IAAAA,EAAkBT,EAAa,EAAG,IAElCU,EAAY9B,SAASC,cAA+B4B,iBAAAA,OAAAA,IAEvB,KAAxBC,EAAUrB,WACjBoB,EAAkB,EAAIL,KAAKC,KAAqB,GAAhBD,KAAKE,UAErCI,EAAY9B,SAASC,cAA+B4B,iBAAAA,OAAAA,IAG/CC,OAAAA,EAGT,SAASC,IAGaC,EAFHhC,SAASM,iBAAiB,gBAInC2B,QAAQ,SAACC,GACXA,GAAmB,KAAnBA,EAAKzB,UAAkB,CACpB,IAAA,IAAIM,EAAI,EAAGA,GAAK,KAAMA,GAAK,EAC1BmB,EAAKC,UAAUC,SAAwBrB,eAAAA,OAAAA,KACzCmB,EAAKC,UAAUE,OAAsBtB,eAAAA,OAAAA,IAGzCmB,EAAKC,UAAUG,IAAI,qBACd,CACDJ,EAAKC,UAAUC,SAAnB,kBACEF,EAAKC,UAAUE,OAAf,iBAGG,IAAA,IAAItB,EAAI,EAAGA,GAAK,KAAMA,GAAK,EAC1BmB,EAAKC,UAAUC,SAAwBrB,eAAAA,OAAAA,KACzCmB,EAAKC,UAAUE,OAAsBtB,eAAAA,OAAAA,IAGzCmB,EAAKC,UAAUG,IAAmBJ,eAAAA,OAAAA,EAAKzB,eAK7C,SAAS8B,IACDC,IAAAA,EAAcb,IAEdc,EAAab,IAEnBc,WAAW,WACTD,EAAWN,UAAUG,IAAmBE,eAAAA,OAAAA,IACxCC,EAAWhC,UAAY+B,GACtB,KAGL,SAASG,EAA2BC,GAC7B,IAAA,IAAI7B,EAAI6B,EAAI1B,OAAS,EAAGH,EAAI,EAAGA,IACT,KAArB6B,EAAI7B,GAAGN,YACTmC,EAAI7B,GAAGN,UAAYmC,EAAI7B,EAAI,GAAGN,UAC9BmC,EAAI7B,EAAI,GAAGN,UAAY,IAO7B,SAASoC,EAAwBD,GAC1B,IAAA,IAAI7B,EAAI,EAAGA,EAAI6B,EAAI1B,OAAS,EAAGH,IACT,KAArB6B,EAAI7B,GAAGN,YACTmC,EAAI7B,GAAGN,UAAYmC,EAAI7B,EAAI,GAAGN,UAC9BmC,EAAI7B,EAAI,GAAGN,UAAY,IAO7B,SAASqC,EAA4BF,EAAKG,GAClCC,IAD2C,EAC3CA,EAAc,GAEHJ,EAAAA,EAAAA,GAHgC,IAG3B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAXK,IAAAA,EAAW,EAAA,MACpBD,EAAY7B,KAAK8B,EAAGxC,YAJ2B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAO5CuC,EAAYE,SAAS,MAIV,eAAZH,GAAwC,cAAZA,IAC9BJ,EAA2BC,GAC3BD,EAA2BC,IAGb,cAAZG,GAAuC,YAAZA,IAC7BF,EAAwBD,GACxBC,EAAwBD,KAI5B,SAASO,IACHC,IADoB,EACpBA,EAAQ,EAEK7C,EAAAA,EAAAA,GAHO,IAGE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACnB,IADI0C,IAAAA,EAAe,EAAA,MACflC,EAAI,EAAGA,EAAI,EAAGA,IAEnBkC,EAAGI,SAAStC,GAAGN,YAAcwC,EAAGI,SAAStC,EAAI,GAAGN,WAChB,KAA7BwC,EAAGI,SAAStC,GAAGN,WACkB,KAAjCwC,EAAGI,SAAStC,EAAI,GAAGN,WAEtB2C,IAVkB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAePtC,IAfO,EAePA,EAAAA,EAAAA,GAfO,IAeK,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACtB,IADImC,IAAAA,EAAkB,EAAA,MAClBlC,EAAI,EAAGA,EAAI,EAAGA,IAEnBkC,EAAGlC,GAAGN,YAAcwC,EAAGlC,EAAI,GAAGN,WACP,KAApBwC,EAAGlC,GAAGN,WACkB,KAAxBwC,EAAGlC,EAAI,GAAGN,WAEb2C,IAtBkB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA2BlBE,IAAAA,EAAezC,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAEnC,KAAV2C,IACFhD,EAAY+B,UAAUE,OAAO,UAC7B3B,EAAUyB,UAAUG,IAAI,aACxB3B,KAGE2C,EAAaJ,SAAS,UACxB/C,EAAWgC,UAAUE,OAAO,UAC5B3B,EAAUyB,UAAUG,IAAI,aACxB3B,KAGEA,EAAW,GAAe,KAAVyC,IAClB1C,EAAUyB,UAAUG,IAAI,aACxBlC,EAAY+B,UAAUE,OAAO,WAIjC,SAASmB,IACP3C,EAASoB,QAAQ,SAAAC,GACfA,EAAKzB,UAAY,KAEnBsB,IAGFA,IAEAhC,EAAO0D,iBAAiB,QAAS,WAC3B1D,GAAAA,EAAOoC,UAAUC,SAAS,SAQ5B,OAPArC,EAAOU,UAAY,UACnBV,EAAOoC,UAAUE,OAAO,SACxBtC,EAAOoC,UAAUG,IAAI,WACrBpC,EAAaiC,UAAUG,IAAI,UAC3BC,SACAA,IAKExC,EAAOoC,UAAUC,SAAS,aAC5BoB,IACArD,EAAWgC,UAAUG,IAAI,UACzBlC,EAAY+B,UAAUG,IAAI,UAC1B5B,EAAUyB,UAAUE,OAAO,aAC3B7B,EAAUC,UAAY,EACtBE,EAAW,EACX4B,IACAA,OAIJvC,SAASyD,iBAAiB,UAAW,SAACC,GAChCA,GAAW,eAAXA,EAAEC,KAAuB,CACvBhD,GAAAA,EAAW,EACb,OAGIiD,IALqB,EAKrBA,EAAmB/C,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAEpCF,EAAAA,EAAAA,GAPU,IAOD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CACnB,IADI0C,IAAAA,EAAe,EAAA,MACflC,EAAIkC,EAAGI,SAASnC,OAAS,EAAGH,EAAI,EAAGA,IAC1C+B,EAA4BG,EAAGI,SAAUK,EAAEC,MAGzCV,EAAGI,SAAStC,GAAGN,YAAcwC,EAAGI,SAAStC,EAAI,GAAGN,WAChB,KAA7BwC,EAAGI,SAAStC,GAAGN,YAElBwC,EAAGI,SAAStC,GAAGN,UACb,GAAA,QAACwC,EAAGI,SAAStC,GAAGN,YAAawC,EAAGI,SAAStC,EAAI,GAAGN,WAElDwC,EAAGI,SAAStC,EAAI,GAAGN,UAAY,GAE/BD,EAAUC,WACLD,EAAUC,YAAawC,EAAGI,SAAStC,GAAGN,WAK/CsB,KA1ByB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA6BrB8B,IAAAA,EAAkBhD,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAGlDqD,KAAKC,UAAUH,KAAsBE,KAAKC,UAAUF,IACpC,IAAblD,GAEH4B,IAGFG,WAAW,WACTS,KACC,QAIPnD,SAASyD,iBAAiB,UAAW,SAACC,GAChCA,GAAW,cAAXA,EAAEC,KAAsB,CACtBhD,GAAAA,EAAW,EACb,OAGIiD,IALoB,EAKpBA,EAAmB/C,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAEpCK,EAAAA,EAAAA,GAPS,IAOG,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CACtB,IADImC,IAAAA,EAAkB,EAAA,MAClBlC,EAAIkC,EAAG/B,OAAS,EAAGH,EAAI,EAAGA,IACjC+B,EAA4BG,EAAIS,EAAEC,MAE9BV,EAAGlC,GAAGN,YAAcwC,EAAGlC,EAAI,GAAGN,WAAiC,KAApBwC,EAAGlC,GAAGN,YACnDwC,EAAGlC,GAAGN,UAAe,GAAA,QAACwC,EAAGlC,GAAGN,YAAawC,EAAGlC,EAAI,GAAGN,WACnDwC,EAAGlC,EAAI,GAAGN,UAAY,GAEtBD,EAAUC,WAAaD,EAAUC,YAAawC,EAAGlC,GAAGN,WAKxDsB,KApBwB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAuBpB8B,IAAAA,EAAkBhD,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAGlDqD,KAAKC,UAAUH,KAAsBE,KAAKC,UAAUF,IACpC,IAAblD,GAEH4B,IAGFG,WAAW,WACTS,KACC,QAIPnD,SAASyD,iBAAiB,UAAW,SAACC,GAChCA,GAAW,cAAXA,EAAEC,KAAsB,CACtBhD,GAAAA,EAAW,EACb,OAGIiD,IALoB,EAKpBA,EAAmB/C,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAEpCF,EAAAA,EAAAA,GAPS,IAOA,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CACnB,IADI0C,IAAAA,EAAe,EAAA,MACflC,EAAI,EAAGA,EAAIkC,EAAGI,SAASnC,OAAS,EAAGH,IAC1C+B,EAA4BG,EAAGI,SAAUK,EAAEC,MAGzCV,EAAGI,SAAStC,GAAGN,YAAcwC,EAAGI,SAAStC,EAAI,GAAGN,WAChB,KAA7BwC,EAAGI,SAAStC,GAAGN,YAElBwC,EAAGI,SAAStC,GAAGN,UACb,GAAA,QAACwC,EAAGI,SAAStC,EAAI,GAAGN,YAAawC,EAAGI,SAAStC,GAAGN,WAElDwC,EAAGI,SAAStC,EAAI,GAAGN,UAAY,GAE/BD,EAAUC,WACLD,EAAUC,YAAawC,EAAGI,SAAStC,GAAGN,WAK/CsB,KA1BwB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA6BpB8B,IAAAA,EAAkBhD,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAGlDqD,KAAKC,UAAUH,KAAsBE,KAAKC,UAAUF,IACpC,IAAblD,GAEH4B,IAGFG,WAAW,WACTS,KACC,QAIPnD,SAASyD,iBAAiB,UAAW,SAACC,GAChCA,GAAW,YAAXA,EAAEC,KAAoB,CACpBhD,GAAAA,EAAW,EACb,OAGIiD,IALkB,EAKlBA,EAAmB/C,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAEpCK,EAAAA,EAAAA,GAPO,IAOK,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CACtB,IADImC,IAAAA,EAAkB,EAAA,MAClBlC,EAAI,EAAGA,EAAIkC,EAAG/B,OAAS,EAAGH,IACjC+B,EAA4BG,EAAIS,EAAEC,MAE9BV,EAAGlC,GAAGN,YAAcwC,EAAGlC,EAAI,GAAGN,WAAiC,KAApBwC,EAAGlC,GAAGN,YACnDwC,EAAGlC,GAAGN,UAAe,GAAA,QAACwC,EAAGlC,EAAI,GAAGN,YAAawC,EAAGlC,GAAGN,WACnDwC,EAAGlC,EAAI,GAAGN,UAAY,GAEtBD,EAAUC,WAAaD,EAAUC,YAAawC,EAAGlC,GAAGN,WAKxDsB,KApBsB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAuBlB8B,IAAAA,EAAkBhD,EAAS0C,IAAI,SAACrB,GAASA,OAAAA,EAAKzB,YAGlDqD,KAAKC,UAAUH,KAAsBE,KAAKC,UAAUF,IACpC,IAAblD,GAEH4B,IAGFG,WAAW,WACTS,KACC","file":"main.9ea0459a.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-inner-declarations */\n'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst fieldRows = document.querySelectorAll('.field-row');\n\nconst rowsArr = [...fieldRows];\n\nconst gameScore = document.querySelector('.game-score');\n\ngameScore.innerText = 0;\n\nconst gameField = document.querySelector('.game-field');\n\nlet gameOver = 0;\n\nconst cells = document.querySelectorAll('.field-cell');\nconst cellsArr = [...cells];\n\nconst columnsArr = [];\n\nfor (let i = 0; i <= 3; i++) {\n  const column = [];\n\n  for (let j = i; j <= cellsArr.length - 1; j += 4) {\n    column.push(cellsArr[j]);\n  }\n\n  columnsArr.push(column);\n}\n\nfunction randomNumber(start, end) {\n  const number = start + Math.ceil(Math.random() * end - start);\n\n  return number;\n}\n\nfunction chooseNumber() {\n  const number = randomNumber(1, 10);\n\n  if (number === 1) {\n    return 4;\n  }\n\n  return 2;\n}\n\nfunction chooseCell() {\n  let fieldCellNumber = randomNumber(1, 16);\n\n  let fieldCell = document.querySelector(`.field-cell--n${fieldCellNumber}`);\n\n  while (!(fieldCell.innerText === '')) {\n    fieldCellNumber = 1 + Math.ceil(Math.random() * 15);\n\n    fieldCell = document.querySelector(`.field-cell--n${fieldCellNumber}`);\n  }\n\n  return fieldCell;\n}\n\nfunction colorCells() {\n  const cellList = document.querySelectorAll('.field-cell');\n\n  const cellArr = [...cellList];\n\n  cellArr.forEach((cell) => {\n    if (cell.innerText === '') {\n      for (let i = 2; i <= 2048; i *= 2) {\n        if (cell.classList.contains(`field-cell--${i}`)) {\n          cell.classList.remove(`field-cell--${i}`);\n        }\n      }\n      cell.classList.add('field-cell--0');\n    } else {\n      if (cell.classList.contains(`field-cell--0`)) {\n        cell.classList.remove(`field-cell--0`);\n      }\n\n      for (let i = 2; i <= 2048; i *= 2) {\n        if (cell.classList.contains(`field-cell--${i}`)) {\n          cell.classList.remove(`field-cell--${i}`);\n        }\n      }\n      cell.classList.add(`field-cell--${cell.innerText}`);\n    }\n  });\n}\n\nfunction addNewNumber() {\n  const cellContent = chooseNumber();\n\n  const fieldCell1 = chooseCell();\n\n  setTimeout(() => {\n    fieldCell1.classList.add(`field-cell--${cellContent}`);\n    fieldCell1.innerText = cellContent;\n  }, 100);\n}\n\nfunction emptyCellCheckRightAndDown(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    if (arr[i].innerText === '') {\n      arr[i].innerText = arr[i - 1].innerText;\n      arr[i - 1].innerText = '';\n    } else {\n      continue;\n    }\n  }\n}\n\nfunction emptyCellCheckLeftAndUp(arr) {\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i].innerText === '') {\n      arr[i].innerText = arr[i + 1].innerText;\n      arr[i + 1].innerText = '';\n    } else {\n      continue;\n    }\n  }\n}\n\nfunction emptyCellInRowOrColumnCheck(arr, keyCode) {\n  const arrOfvalues = [];\n\n  for (const ch of arr) {\n    arrOfvalues.push(ch.innerText);\n  }\n\n  if (!arrOfvalues.includes('')) {\n    return;\n  }\n\n  if (keyCode === 'ArrowRight' || keyCode === 'ArrowDown') {\n    emptyCellCheckRightAndDown(arr);\n    emptyCellCheckRightAndDown(arr);\n  }\n\n  if (keyCode === 'ArrowLeft' || keyCode === 'ArrowUp') {\n    emptyCellCheckLeftAndUp(arr);\n    emptyCellCheckLeftAndUp(arr);\n  }\n}\n\nfunction emptyCellCheck() {\n  let count = 0;\n\n  for (const ch of rowsArr) {\n    for (let i = 0; i < 3; i++) {\n      if (\n        ch.children[i].innerText !== ch.children[i + 1].innerText\n        && ch.children[i].innerText !== ''\n        && ch.children[i + 1].innerText !== ''\n      ) {\n        count++;\n      }\n    }\n  }\n\n  for (const ch of columnsArr) {\n    for (let i = 0; i < 3; i++) {\n      if (\n        ch[i].innerText !== ch[i + 1].innerText\n        && ch[i].innerText !== ''\n        && ch[i + 1].innerText !== ''\n      ) {\n        count++;\n      }\n    }\n  }\n\n  const innerTextArr = cellsArr.map((cell) => cell.innerText);\n\n  if (count === 24) {\n    messageLose.classList.remove('hidden');\n    gameField.classList.add('game-over');\n    gameOver++;\n  }\n\n  if (innerTextArr.includes('2048')) {\n    messageWin.classList.remove('hidden');\n    gameField.classList.add('game-over');\n    gameOver++;\n  }\n\n  if (gameOver > 0 && count === 24) {\n    gameField.classList.add('game-over');\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction clearCells() {\n  cellsArr.forEach(cell => {\n    cell.innerText = '';\n  });\n  colorCells();\n}\n\ncolorCells();\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.innerText = 'Restart';\n    button.classList.remove('start');\n    button.classList.add('restart');\n    messageStart.classList.add('hidden');\n    addNewNumber();\n    addNewNumber();\n\n    return;\n  }\n\n  if (button.classList.contains('restart')) {\n    clearCells();\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    gameField.classList.remove('game-over');\n    gameScore.innerText = 0;\n    gameOver = 0;\n    addNewNumber();\n    addNewNumber();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.code === 'ArrowRight') {\n    if (gameOver > 0) {\n      return;\n    }\n\n    const numbersArrBefore = cellsArr.map((cell) => cell.innerText);\n\n    for (const ch of rowsArr) {\n      for (let i = ch.children.length - 1; i > 0; i--) {\n        emptyCellInRowOrColumnCheck(ch.children, e.code);\n\n        if (\n          ch.children[i].innerText === ch.children[i - 1].innerText\n          && ch.children[i].innerText !== ''\n        ) {\n          ch.children[i].innerText = `${\n            +ch.children[i].innerText + +ch.children[i - 1].innerText\n          }`;\n          ch.children[i - 1].innerText = '';\n\n          gameScore.innerText\n            = +gameScore.innerText + +ch.children[i].innerText;\n        } else {\n          continue;\n        }\n      }\n      colorCells();\n    }\n\n    const numbersArrAfter = cellsArr.map((cell) => cell.innerText);\n\n    if (\n      JSON.stringify(numbersArrBefore) !== JSON.stringify(numbersArrAfter)\n      && gameOver === 0\n    ) {\n      addNewNumber();\n    }\n\n    setTimeout(() => {\n      emptyCellCheck();\n    }, 100);\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.code === 'ArrowDown') {\n    if (gameOver > 0) {\n      return;\n    }\n\n    const numbersArrBefore = cellsArr.map((cell) => cell.innerText);\n\n    for (const ch of columnsArr) {\n      for (let i = ch.length - 1; i > 0; i--) {\n        emptyCellInRowOrColumnCheck(ch, e.code);\n\n        if (ch[i].innerText === ch[i - 1].innerText && ch[i].innerText !== '') {\n          ch[i].innerText = `${+ch[i].innerText + +ch[i - 1].innerText}`;\n          ch[i - 1].innerText = '';\n\n          gameScore.innerText = +gameScore.innerText + +ch[i].innerText;\n        } else {\n          continue;\n        }\n      }\n      colorCells();\n    }\n\n    const numbersArrAfter = cellsArr.map((cell) => cell.innerText);\n\n    if (\n      JSON.stringify(numbersArrBefore) !== JSON.stringify(numbersArrAfter)\n      && gameOver === 0\n    ) {\n      addNewNumber();\n    }\n\n    setTimeout(() => {\n      emptyCellCheck();\n    }, 100);\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.code === 'ArrowLeft') {\n    if (gameOver > 0) {\n      return;\n    }\n\n    const numbersArrBefore = cellsArr.map((cell) => cell.innerText);\n\n    for (const ch of rowsArr) {\n      for (let i = 0; i < ch.children.length - 1; i++) {\n        emptyCellInRowOrColumnCheck(ch.children, e.code);\n\n        if (\n          ch.children[i].innerText === ch.children[i + 1].innerText\n          && ch.children[i].innerText !== ''\n        ) {\n          ch.children[i].innerText = `${\n            +ch.children[i + 1].innerText + +ch.children[i].innerText\n          }`;\n          ch.children[i + 1].innerText = '';\n\n          gameScore.innerText\n            = +gameScore.innerText + +ch.children[i].innerText;\n        } else {\n          continue;\n        }\n      }\n      colorCells();\n    }\n\n    const numbersArrAfter = cellsArr.map((cell) => cell.innerText);\n\n    if (\n      JSON.stringify(numbersArrBefore) !== JSON.stringify(numbersArrAfter)\n      && gameOver === 0\n    ) {\n      addNewNumber();\n    }\n\n    setTimeout(() => {\n      emptyCellCheck();\n    }, 100);\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.code === 'ArrowUp') {\n    if (gameOver > 0) {\n      return;\n    }\n\n    const numbersArrBefore = cellsArr.map((cell) => cell.innerText);\n\n    for (const ch of columnsArr) {\n      for (let i = 0; i < ch.length - 1; i++) {\n        emptyCellInRowOrColumnCheck(ch, e.code);\n\n        if (ch[i].innerText === ch[i + 1].innerText && ch[i].innerText !== '') {\n          ch[i].innerText = `${+ch[i + 1].innerText + +ch[i].innerText}`;\n          ch[i + 1].innerText = '';\n\n          gameScore.innerText = +gameScore.innerText + +ch[i].innerText;\n        } else {\n          continue;\n        }\n      }\n      colorCells();\n    }\n\n    const numbersArrAfter = cellsArr.map((cell) => cell.innerText);\n\n    if (\n      JSON.stringify(numbersArrBefore) !== JSON.stringify(numbersArrAfter)\n      && gameOver === 0\n    ) {\n      addNewNumber();\n    }\n\n    setTimeout(() => {\n      emptyCellCheck();\n    }, 100);\n  }\n});\n"]}